.TH DIR2ATR "1" "April 2007" "dir2atr (atarisio 0.30)" "HiassofT Atari 8-bit Tools"
.SH NAME
dir2atr \- create an Atari disk image from a directory of files

.SH SYNOPSIS
.B dir2atr
[\fB\-d\fR] [\fB\-m\fR] [\fB\-p\fR] [\fB\-b\fR \fIDOS\fR] [\fBsectors\fR] \fIimage\-filename\fR \fIdirectory\fR

.SH DESCRIPTION
\fBdir2atr\fR creates an Atari DOS 2.x or MyDOS compatible disk image,
containing the files from \fIdirectory\fR (or a blank disk, if the
supplied \fIdirectory\fR does not exist). Despite the name, dir2atr is
capable of creating ATR, XFD, or DCM format images.

.SH OPTIONS
.TP
\fB\-d\fR
Create double\-density (256 bytes/sector) disk image. Without this option,
the default is to create a single\-density (128 bytes/sector) image.
.TP
\fB\-m\fR
Use MyDOS format (VTOC; see \fB\-b\fR for boot sector type). Without this
option, \fBdir2atr\fR may still create a MyDOS format image: If the
number of sectors is not supplied, or if using double density (\fB\-d\fR),
or if the number of sectors supplied in single density mode is anything
other than 720 or 1040, then MyDOS format will be used.
.sp
.RS
Another way of saying this is that DOS 2.x format will only be used if the
number of sectors is supplied, and if it is equal to either 720 (DOS 2.0
format) or 1040 (DOS 2.5 enhanced density format).
.sp
SpartaDOS\-formatted images are \fBnot\fR supported.
.RE
.TP
\fB\-p\fR
Create \fBPICONAME.TXT\fR file in disk image, containing long filename
information (will be used by MyPicoDOS when displaying filenames).
.TP
\fB\-b\fR \fIDOS\fR
Create bootable disk for specified DOS. The directory must already
contain the \fBDOS.SYS\fR or equivalent for the specified DOS, unless
creating a MyPicoDOS image (in which case, \fBPICODOS.SYS\fR will be
created and added to the image).
.sp
Supported DOS choices (case\-insensitive):
.br
Dos20, Dos25, MyDos453, TurboDos21, TurboDos21HS, MyPicoDos403, MyPicoDos403HS
.TP
\fBsectors\fR
Number of sectors in the created image. Standard floppy\-sized images
generally contain 720 sectors (single\- or double\-density, 90K or 180K
capacity) or 1040 sectors (1050/DOS 2.5 enhanced density, 127K capacity).
.sp
Some Atari drives and DOSes support larger floppy disks (e.g. 1440
double\-density sectors for a DS/DD XF551 disk, 360K capacity; or
2880 DD sectors for a PC-style 720K floppy drive).
.sp
Hard disk images may contain up to 65535 double\-density sectors. This
limitation is imposed by the ATR file format (16 megabytes is pretty
big for an 8-bit Atari disk, though). Most Atari DOSes won't support
physical disk partitions bigger than this, anyway. Theoretically,
the XFD "format" could be of unlimited size (since it's just a raw
dump of the sectors, with no structure), but \fBdir2atr\fR imposes
the same size limit for XFD as for ATR.
.sp
Actually, the distinction between "hard disk" and "floppy disk" images
doesn't really exist in the ATR file format: any image that fits on
an actual floppy disk (one that's actually supported by an actual
Atari DOS) is by definition a floppy image, and anything
larger than that must be considered a hard disk image.
.sp
If \fBsectors\fR is omitted, \fBdir2atr\fR will create a MyDOS\-format
image with as many sectors as needed to contain the all the files
in \fIdirectory\fR, unless this is less than 720 sectors (in which
case, a 720\-sector image is created, with some free sectors).
.sp
If \fBsectors\fR is given, it must be between 720 and 65535. No
Atari\-compatible disk may contain fewer than 720 sectors. When
creating a DCM (DiskComm) image, the only supported image sizes
are 90K (720 single\-density sectors), 127K (1040 single\-density
sectors, aka 1050 enhanced density), and 180K (720 double\-density
sectors).
.sp
If you specify a number of sectors too small for the files in
\fIdirectory\fR, you will get an error message, but the image will
still be created. It will contain whatever files were copied before
running out of space (which might be none, if the first file is too
big to fit).
.TP
\fIimage\-filename\fR
Disk image file to create. The image type is determined by the
filename "extension", which should be \fI.atr\fR, \fI.xfd\fR, or \fI.dcm\fR.
The extension is treated case\-insensitively, and the default image type
is ATR if the extension is missing or not recognized.
.TP
\fIdirectory\fR
Directory of files to be copied to the image. The files are copied in
case-sensitive alphabetical order. \fIdirectory\fR may contain
subdirectories, which will be skipped if creating a DOS 2.x image, or
included (recursively) as MyDOS subdirectories if creating a MyDOS image.
While the image is being created, each filename in \fIdirectory\fR is
printed to standard error output after it's copied.
.sp
\fBNOTE:\fR Empty subdirectories will \fBnot\fR be copied to the image.
.sp
Atari DOS and MyDOS (and any other compatible DOS for the Atari) suffer
from a limit of 64 files per directory. For Atari DOS, this means 64
files per disk, since subdirectories are not supported. For MyDOS,
it means 64 files/subdirectories per directory. In either case,
\fBdir2atr\fR will copy the first 64 files in the directory or
subdirectory, then issue a warning to let you know that it had to
skip the rest of the files.
.sp
To create a blank disk, you may create and use an empty directory. A
blank disk is also created if the specified \fIdirectory\fR is not
a directory (e.g. if it's a regular file), or if it does not exist
at all! No error messages are given for non\-directories or non\-existent
files. This is probably not the author's original intent, but it can
be considered useful behaviour (except when it's confusing: if you make
a typo in the \fIdirectory\fR, you'll end up with a blank image instead
of the expected error message. The careful user will notice that no
"Added file" messages get printed in this case).
.sp
Although Atari DOS and MyDOS only support uppercase "8.3" names,
filenames within \fIdirectory\fR are not required to conform to this
limitation. \fBdir2atr\fR will transform the filenames so that they
match the Atari limitations, although care should be taken to avoid
filenames within \fIdirectory\fR that differ only in case (e.g.
\fBFOO\fR and \fBfoo\fR). If this happens, some of the resulting Atari
filenames will contain spaces, which is incompatible with most
(all?) Atari DOSes. Also, \fBdir2atr\fR will allow filenames inside
the image to start with a digit, which is incompatible with most Atari
DOSes as well.
.sp
If the \fB\-p\fR option is used, the filenames will still be transformed
as necessary, but the original filenames will be recorded in the
\fBPICONAME.TXT\fR file. If creating a MyPicoDOS image, the MyPicoDOS
menu will actually display the full, original filenames.
.SH
AUTHOR
Matthias Reichl <\fBhias@horus.com\fR>
.PP
Man page by B. Watson <\fBurchlay@urchlay.com\fB>

.SH
SEE ALSO
\&\fIatariserver\fR\|(1), \&\fIatarixfer\fR\|(1), \&\fIadir\fR\|(1).
.PP
AtariSIO home page: \fBhttp://www.horus.com/~hias/atari/\fR
