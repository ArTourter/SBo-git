#!/bin/sh

# Slackware build script for KVM

# Copyright 2008-2009  Murat D. Kadirov <banderols@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=kvm
VERSION=${VERSION:-88}
ARCH=${ARCH:-i486}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

KERNEL=${KERNEL:-$(uname -r)}
PKG_VERS=${VERSION}_$(echo $KERNEL | tr - _)

# The script is set to build all possible target CPU emulators by default.
# Modify the BUILD ARCH line below if you DO NOT need to emulate specific
# target CPUs.  BUILD_ARCH="x86_64" should work fine for most 32-bit or 64-bit
# emulation on PCs (Linux guests, BSD guests, Windows guests)
BUILD_ARCH="i386 x86_64 arm cris m68k microblaze mips mipsel mips64el ppc ppcemb ppc64 sh4 sh4eb sparc sparc64"

export PATH=$PATH:/usr/share/texmf/bin

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
fi

# Bail if group isn't valid on your system
# gid=221 is suggested to avoid conflicts with other SBo packages,
# but it's your call: http://slackbuilds.org/uid_gid.txt
if ! grep -q "^kvm:" /etc/group; then
  printf "\n\tYou must have a kvm group to run this script.\n"
  printf "\tSomething like this should suffice for most systems:\n"
  printf "\t# groupadd -g 221 kvm\n\n"
  exit 1
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

patch -p1 < $CWD/qemu-fix-build-for-esd-audio.patch

# Uncomment if 2.6.30.* kernel is used.
#patch -p1 < $CWD/2.6.30.patch

# Uncomment if 2.6.31.* kernel is used.
#rm kvm/kernel/configure

# Don't run depmod or try to rename existing modules on "make install"
patch -p1 < $CWD/kvm-88-no_trickery_on_install.patch

# This translates the possible targets into the correct format for configure
TARGETS="$(for i in $BUILD_ARCH ; do printf "$i-softmmu " ; done)"

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --audio-drv-list="oss alsa sdl esd" \
  --audio-card-list="ac97 es1370 sb16 cs4231a adlib gus" \
  --enable-mixemu \
  --target-list="$TARGETS"

make \
  mandir=/usr/man \
  docdir=/usr/doc/$PRGNAM-$VERSION
make install \
  mandir=/usr/man \
  docdir=/usr/doc/$PRGNAM-$VERSION \
  DESTDIR=$PKG

cp -a kvm/kvm_stat $PKG/usr/bin

mkdir -p $PKG/lib/udev/rules.d/
cat kvm/scripts/65-kvm.rules > $PKG/lib/udev/rules.d/65-kvm.rules

# Make modprobe prefer the new modules in ${moduledir}/extra/
# We don't want to install this with a .new suffix, because we want it
# removed with the package.
mkdir -p $PKG/etc/depmod.d
cat << EOF > $PKG/etc/depmod.d/kvm-${KERNEL}.conf
override kvm ${KERNEL} extra
override kvm-amd ${KERNEL} extra
override kvm-intel ${KERNEL} extra
EOF

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | \
    xargs strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | \
    xargs strip --strip-unneeded 2> /dev/null || true
)

( cd $PKG/usr/man
  find . -type f -exec gzip -9 {} \;
  for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
)

cp -a kvm/scripts CODING_STYLE COPYING COPYING.LIB Changelog KVM_VERSION \
      LICENSE MAINTAINERS README TODO VERSION $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
sed "s%@KERNEL@%$KERNEL%" $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$PKG_VERS-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
