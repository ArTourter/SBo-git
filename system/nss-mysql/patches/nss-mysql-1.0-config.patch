diff -ur nss-mysql-1.0.std/SHADOW nss-mysql-1.0/SHADOW
--- nss-mysql-1.0.std/SHADOW	2005-01-26 04:42:13.000000000 +0100
+++ nss-mysql-1.0/SHADOW	2007-05-18 16:04:32.000000000 +0200
@@ -45,7 +45,7 @@
 ## shadow extentions in your database, you must add these columns to the
 ## following SQL request.
 
-> GRANT select(user_name,password,user_id,status,name) on nss_mysql.user to
+> GRANT select(user_name,password,user_id,status) on nss_mysql.user to
   'nss-shadow'@localhost identified by 'another_password';
  
 > FLUSH PRIVILEGES;
diff -ur nss-mysql-1.0.std/nss-mysql-root.conf nss-mysql-1.0/nss-mysql-root.conf
--- nss-mysql-1.0.std/nss-mysql-root.conf	2002-08-28 18:47:53.000000000 +0200
+++ nss-mysql-1.0/nss-mysql-root.conf	2007-05-18 16:07:32.000000000 +0200
@@ -46,7 +46,8 @@
 #  2) inet:host (port will be 3306)
 #  3) host:port (inet socket will be used)
 #  4) host (inet socket on port 3306 will be used)
-shadow.host = inet:localhost:3306;
+#shadow.host = inet:localhost:3306;
+shadow.host = unix:/var/run/mysql/mysql.sock;
 
 # database: database name
 # This database MUST contain all the columns mentionned in this file
@@ -63,7 +64,7 @@
 # backup host
 # A backup MySQL server
 # Can be empty
-shadow.backup_host = inet:backup:3306;
+#shadow.backup_host = inet:backup:3306;
 
 # The following parameters are just like
 # the main server. They can be empty.
@@ -71,7 +72,7 @@
 # the corresponding value for the main
 # server will be use
 
-shadow.backup_database = nss_mysql_backup;
+#shadow.backup_database = nss_mysql_backup;
 # shadow.backup_db_user = nss;
 # shadow.backup_db_password = mAip2sFxXJcw;
 
@@ -103,39 +104,45 @@
 # if you do not have such a column, you can use something like
 # shadow.lastchange_column = UNIX_TIMESTAMP()-10;
 # The field name must be fully qualified, i.e. written as table.field
-shadow.lastchange_column = user.lastchange;
+#shadow.lastchange_column = user.lastchange;
+shadow.lastchange_column = UNIX_TIMESTAMP()-10;
 
 # min_column
 # Minimum number of days to warn user to change the password
 # if you do not have such a column, you can use something like
 # shadow.min_column = 1;
 # The field name must be fully qualified, i.e. written as table.field
-shadow.min_column = user.min;
+#shadow.min_column = user.min;
+shadow.min_column = 1;
 
 # max_column
 # Maximum number of days to warn user to change the password
 # if you do not have such a column, you can use something like
 # shadow.max_column = 2;
 # The field name must be fully qualified, i.e. written as table.field
-shadow.max_column = user.max;
+#shadow.max_column = user.max;
+shadow.max_column = 2;
 
 # warn_column
 # Number of days to warn user to change the password 
 # if you do not have such a column, you can use something like
 # shadow.warn_column = 7;
 # The field name must be fully qualified, i.e. written as table.field
-shadow.warn_column = user.warn;
+#shadow.warn_column = user.warn;
+shadow.warn_column = 7;
 
 # inact_column
 # Number of days the account may be inactive
 # if you do not have such a column, you can use something like
 # shadow.inact_column = -1; # disabled
 # The field name must be fully qualified, i.e. written as table.field
-shadow.inact_column = user.inact;
+#shadow.inact_column = user.inact;
+shadow.inact_column = -1;
 
 # expire_column
 # Number of days since 1970-01-01 until account expired 
 # if you do not have such a column, you can use something like
 # shadow.expire_column = -1; # disabled
 # The field name must be fully qualified, i.e. written as table.field
-shadow.expire_column = user.expire;
+#shadow.expire_column = user.expire;
+shadow.expire_column = -1;
diff -ur nss-mysql-1.0.std/nss-mysql.conf nss-mysql-1.0/nss-mysql.conf
--- nss-mysql-1.0.std/nss-mysql.conf	2002-08-28 18:47:53.000000000 +0200
+++ nss-mysql-1.0/nss-mysql.conf	2007-05-18 16:08:12.000000000 +0200
@@ -46,7 +46,8 @@
 #  2) inet:host (port will be 3306)
 #  3) host:port (inet socket will be used)
 #  4) host (inet socket on port 3306 will be used)
-users.host = inet:localhost:3306;
+#users.host = inet:localhost:3306;
+users.host = unix:/var/run/mysql/mysql.sock;
 
 # database: database name
 # This database MUST contain all the columns mentionned in this file
@@ -63,7 +64,7 @@
 # backup host
 # A backup MySQL server
 # Can be empty
-users.backup_host = inet:backup:3306;
+#users.backup_host = inet:backup:3306;
 
 # The following parameters work just like
 # the main server's. They can be empty.
@@ -71,7 +72,7 @@
 # the corresponding value for the main
 # server will be used 
 
-users.backup_database = nss_mysql_backup;
+#users.backup_database = nss_mysql_backup;
 # users.backup_db_user = nss;
 # users.backup_db_password = mAip2sFxXJcw;
 
diff -ur nss-mysql-1.0.std/sample.sql nss-mysql-1.0/sample.sql
--- nss-mysql-1.0.std/sample.sql	2005-01-26 04:39:06.000000000 +0100
+++ nss-mysql-1.0/sample.sql	2007-05-18 16:04:11.000000000 +0200
@@ -1,6 +1,6 @@
 # MySQL dump 8.9
 #
-# Host: localhost    Database: nss-mysql
+# Host: localhost    Database: nss_mysql
 #
 
 # 
