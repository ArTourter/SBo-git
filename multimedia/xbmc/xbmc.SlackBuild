#!/bin/sh

# Slackware build script for XBMC

# Copyright 2009-2010 Larry Hajali <larryhaja[at]gmail[dot]com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=xbmc
VERSION=${VERSION:-9.11}
ARCH=${ARCH:-i486}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Let's get rid of the lsb_release dependency.
sed -i 's|/usr/bin/lsb_release -d|/bin/cat /etc/slackware-version|' \
  xbmc/utils/SystemInfo.cpp

# Fix a hardcoded python2.5 install path in the EventClients Makefile.
PYVER=$(python -c 'import sys; print sys.version[:3]')
sed -i "s|lib/python2.5|lib${LIBDIRSUFFIX}/python${PYVER}|g" \
  tools/EventClients/Makefile

# Patch to use XBMC's jpegint.h because of a missing header file in Slackware.
# Fix lib64 compatibility.
patch -p1 < $CWD/patches/jpegint_h.patch
patch -p1 < $CWD/patches/xbmc-lib64.patch
# Fixes from upstream not included in stable release.
patch -p0 < $CWD/patches/fix-wrapper_c.patch
patch -p0 < $CWD/patches/xbmc-9.11-wavpack.patch

# Create configure scripts.
[ ! -x bootstrap ] && chmod +x bootstrap
./bootstrap

# XBMC doesn't use a consistent --libdir so we need to provide
# some missing includes.
EXTRA_INCLUDES="\
  -I/usr/lib${LIBDIRSUFFIX}/dbus-1.0/include \
  -I/usr/lib${LIBDIRSUFFIX}/glib-2.0/include"

# Here are some additional flags that can be manually added to configure
# so XBMC will use system libraries instead of shipped libraries.
# --enable-external-ffmpeg	* to use system ffmpeg
# --enable-external-liba52	* to use system liba52 library
#				  comes with a52dec
# --enable-external-libdts	* to use system DTS Coherent Acoustics decoder
#				  also known as libdca
# --enable-external-libmpeg2	* to use system mpeg-2 and mpeg-1 decoder
# --enable-external-libass	* to use system subtitle renderer
# --enable-external-libraries	* to enable all optional system libraries
CFLAGS="$SLKCFLAGS $EXTRA_INCLUDES" \
CXXFLAGS="$SLKCFLAGS $EXTRA_INCLUDES" \
./configure \
  --prefix=/usr \
  --enable-vdpau \
  --enable-xrandr \
  --enable-ccache \
  --disable-debug \
  --enable-gl \
  --enable-pulse \
  --enable-faac \
  --enable-dvdcss \
  --enable-mid \
  --enable-avahi \
  --enable-joystick \
  --enable-goom \
  --enable-external-libogg \
  --enable-external-libwavpack \
  --enable-external-python \
  --build=$ARCH-slackware-linux

make

# Wii controller usage. Default is no.
if ! [ "${USE_WII:-no}" = "no" ]; then
  make eventclients prefix=$PKG/usr installdir=/usr WII_EXTRA_OPTS="-DCWIID_OLD"
fi

make install install-livedatas prefix=$PKG/usr

# Fix executable permissions.
chmod 0755 $PKG/usr/bin/*

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Install manpages.
mkdir -p $PKG/usr/man/man1
install -m 0644 \
  docs/manpages/{diskmounter,runXBMC,xbmc.bin,xbmc,xbmc-standalone,xbmc-send,setAlsaVolumes,installXBMC}.1 \
  $PKG/usr/man/man1
if ! [ "${USE_WII:-no}" = "no" ]; then
  install -m 0644 docs/manpages/{xbmc-j2meremote,xbmc-ps3remote,xbmc-wiiremote}.1 \
    $PKG/usr/man/man1
fi
gzip -9 $PKG/usr/man/man?/*.?

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  copying.txt keymapping.txt LICENSE.GPL README.linux tools/EventClients/README.txt \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
rm -f $PKG/usr/share/xbmc/{README.linux,LICENSE.GPL,*.txt}

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
